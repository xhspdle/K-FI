<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kfi.mybatis.dgl.MembersMapper">


<!-- vo 데이터 참고용
	private int user_num; // 유저번호 USER_NUM
	private String user_id; // 아이디 USER_ID
	private String user_pwd; // 비밀번호 USER_PWD
	private String user_nickname; // 닉네임 USER_NICKNAME
	private String user_email; // 이메일 USER_EMAIL
	private Date user_regdate; // 가입일 USER_REGDATE
	private int user_status; // 아이디상태 USER_STATUS
	private int user_certi; // 인증상태 USER_CERTI	 -->
	
	

	
	

	

	<!-- 가입 -->
 	 <insert id="join" parameterType="logmembers">
		insert into members values
		(#{user_num}, #{user_id},#{user_nickname}, #{user_pwd}, #{user_email}, sysdate,0,0)
	</insert>
	 
	<!-- 로그인 -->
	<select id="login" resultType="logmembers" parameterType="hashmap" >
		select * from members where USER_ID = #{user_id} and  USER_PWD=#{user_pwd}
	</select>
	
	<!-- id 체크 -->
	<select id="idCheck" parameterType="string" resultType="int">
		select count(*) from members where USER_ID = #{user_id}
	</select>
	
	<!-- 닉네임 체크 -->
	<select id="nickCheck" parameterType="String" resultType="int">
		select count(*) from members where USER_NICKNAME = #{user_nickname}
	</select>
	
	<!-- 이메일 체크 -->
	<select id="emilcheck" parameterType="String" resultType="int">
		select count(*) from members where USER_EMAIL=#{user_email}
	</select>
	
	<!-- 동일 이메일 검사 -->
	<select id="findEmail" parameterType="logmembers" resultType="logmembers">
		select * from members where USER_EMAIL=#{user_email}
	</select>
	
	<!-- 인증코드(키) 생성 -->
	 <insert id="createKey">
		insert into CERTI_MEMBERS values(#{cm_key})
	</insert>
	
	<!-- 사용자 인증상태 0->1 변경 -->
	<update id="userCerti"> 
	 	<![CDATA[update members set USER_CERTI = 1 where (select count(*) from members where USER_EMAIL = #{user_email}) > 0]]>
	 </update>

	<!-- 마지막유저번호 -->
	<select id="getMaxnum" resultType="int">
		select NVL(max(user_num),0) maxnum from members
	</select>
	
	<!-- 유저번호 -->
	<select id="getCount" parameterType="hashmap" resultType="int">
		select NVL(count(user_num),0) cnt from members
	</select>
	
	
	<!-- //////////////////////admin에서 같이 사용 -->
	<!-- 목록 -->
	<select id="list" parameterType="hashmap" resultType="logmembers">
		select * from
		(
			select mblist.*,rownum rnum from 
			(
			select * from members
	<!-- 	 	<include refid="search"/>  -->
			order by user_num desc 
			)mblist
		)
		<![CDATA[ where rnum>=#{startrow} and rnum<=#{endrow}]]>
	</select>
	
	<!-- 사용자 조회 -->
	<select id="select" parameterType="int" resultType="logmembers">
		select * from members where user_num=#{user_num}
	</select>
	<!-- 사용자 정보 변경 -->
	<update id="update" parameterType="logmembers">
		update members
		<set>
		 	<if test="user_nickname!=null and user_nickname!=''">user_nickname=#{user_nickname},</if>
		 	<if test="user_pwd!=null and user_pwd!=''">user_pwd=#{user_pwd},</if>
		 	<if test="user_email!=null and user_email!=''">user_email=#{user_email},</if>
		 	<if test="user_status!=null and user_status!=''">user_status=#{user_status}</if> 
		</set>
		where user_num=#{user_num}
	</update>
	<delete id="delete" parameterType="int">
		delete from members where user_num=#{user_num}
	</delete>
</mapper>